<BB: android.location.Location Y8(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<NM: boolean Xy()>;<BuildClass: java.lang.String getFINGERPRINT()>
<NM: boolean Xy()>;<BuildClass: java.lang.String getMANUFACTURER()>
<NM: boolean Xy()>;<BuildClass: java.lang.String getMODEL()>
<WV: boolean Y8(android.view.MenuItem,w2,int)>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<a.a.a.a.i.f.e: int read(byte[],int,int)>;<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<a.a.a.a.i.f.e: void a()>;<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<a.a.a.j: a.a.a.d.d a(a.a.a.d.c,a.a.a.a.a,javax.net.ssl.TrustManager[])>;<java.net.HttpURLConnection: int getResponseCode()>|<javax.net.ssl.HttpsURLConnection: int getResponseCode()>
<a.a.b.c.a.a.e: java.io.InputStream b(android.net.Uri)>;<android.database.Cursor: java.lang.String getString(int)>
<a.a.b.c.a.k: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>|<javax.net.ssl.HttpsURLConnection: int getResponseCode()>
<a.a: void c()>;<org.apache.http.HttpEntity: java.io.InputStream getContent()>
<a.b.a.d.c: boolean a(boolean,long,java.lang.String,int,int)>;<java.net.HttpURLConnection: int getResponseCode()>
<a.b.k.k: void <clinit>()>;<BuildClass: java.lang.String getFINGERPRINT()>
<a.b.p.f0: int a(int,int,int)>;<android.database.Cursor: int getCount()>
<a.b.p.r0: android.graphics.drawable.Drawable g(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<a.b.p.r0: void a(android.view.View,android.content.Context,android.database.Cursor)>;<android.database.Cursor: java.lang.String getString(int)>
<a.c: void write(a.c,long)>;<org.apache.http.HttpEntity: java.io.InputStream getContent()>|<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<a.f.h.b: a.f.h.b$e a(android.content.Context,android.os.CancellationSignal,a.f.h.a)>;<android.database.Cursor: int getColumnIndex(java.lang.String)>
<a.f.h.b: a.f.h.b$e a(android.content.Context,android.os.CancellationSignal,a.f.h.a)>;<android.database.Cursor: int getCount()>|<android.database.Cursor: int getColumnIndex(java.lang.String)>
<acx: void a(android.content.Context,int)>;<android.os.PowerManager: boolean isScreenOn()>|<android.os.PowerManager: boolean isInteractive()>
<ae: K9$sZ Xy(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<anet.channel.session.b: anet.channel.session.b$a a(anet.channel.request.Request,anet.channel.RequestCb)>;<java.net.HttpURLConnection: int getResponseCode()>
<anet.channel.session.e: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<anet.channel.status.b: void b(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<anet.channel.status.b: void d()>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<anet.channel.strategy.dispatch.c: int a(java.lang.String,java.util.Map,int)>;<java.net.HttpURLConnection: int getResponseCode()>
<anetwork.channel.g.e: void onResponseCode(int,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<anetwork.channel.k.k: void onFinish(int,java.lang.String,anet.channel.statist.RequestStatistic)>;<java.net.HttpURLConnection: int getResponseCode()>
<anetwork.channel.l.e: void onResponseCode(int,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<aot: boolean Xy(java.lang.String,java.security.cert.X509Certificate)>;<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>
<asv: com.jb.zcamera.community.area.bean.AddressBean a(java.lang.Double,java.lang.Double)>;<java.net.HttpURLConnection: int getResponseCode()>
<b.a.b.a.c.e.tc: int a(java.lang.Object,byte[],int,int,int,b.a.b.a.c.e.Ta)>;<android.database.Cursor: byte[] getBlob(int)>
<b.a.b.a.c.e.tc: void b(java.lang.Object,java.lang.Object)>;<android.database.Cursor: java.lang.String getString(int)>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getBRAND()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getDEVICE()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getPRODUCT()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getMANUFACTURER()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getPRODUCT()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getMANUFACTURER()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getFINGERPRINT()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getPRODUCT()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getMANUFACTURER()>
<b.b.a.a.a: boolean a(android.content.Context)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getPRODUCT()>|<BuildClass: java.lang.String getMANUFACTURER()>
<b.b.a.a.a: boolean d(java.lang.String,android.content.Context)>;<android.telephony.TelephonyManager: int getPhoneType()>|<android.telephony.TelephonyManager: int getSimState()>
<b.b.a.a.a: boolean d(java.lang.String,android.content.Context)>;<android.telephony.TelephonyManager: int getSimState()>
<b.b.a.a.a: boolean d(java.lang.String,android.content.Context)>;<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<b.b.a.a.c: java.util.Map b()>;<android.location.LocationManager: boolean isLocationEnabled()>|<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<b.b.a.a.c: java.util.Map c()>;<android.location.LocationManager: boolean isLocationEnabled()>
<b.b.a.a.f$a: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<b.b.a.o.h.f: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<b.b.a.q: android.location.Location i()>;<android.location.LocationManager: boolean isLocationEnabled()>
<b.b.a.q: android.location.Location l()>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<b.b.a.s: void b()>;<android.location.LocationManager: boolean isLocationEnabled()>
<b.b.b.H: void start()>;<android.os.PowerManager: boolean isScreenOn()>|<android.os.PowerManager: boolean isInteractive()>
<b.b.b._b: void a(b.b.b.Ub)>;<android.database.Cursor: int getInt(int)>
<b.b.d.b.h.e: b.b.d.b.h.g b()>;<java.net.HttpURLConnection: int getResponseCode()>
<b.c.a.c.a.a.d: java.io.InputStream b(android.net.Uri)>;<android.database.Cursor: java.lang.String getString(int)>
<b.c.a.c.a.k: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<b.d.a.P: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>;<android.database.Cursor: int getCount()>
<b.d.a.a.a.O: android.location.Location f()>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<b.e.a.r: void e(b.e.a.i)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<b.g.c.j.g: boolean a(com.google.android.gms.tasks.Task)>;<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<bip: java.util.ArrayList f(java.lang.String)>;<android.database.Cursor: int getInt(int)>
<bip: java.util.ArrayList f(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<c.L.a.a.c.b: void b(android.content.Intent,int,c.L.a.a.c.g)>;<android.database.Cursor: long getLong(int)>|<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<c.L.a.a.c.b: void b(android.content.Intent,int,c.L.a.a.c.g)>;<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<c.L.a.d.J: java.util.List sc(java.lang.String)>;<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>|<android.database.Cursor: int getColumnIndex(java.lang.String)>
<c.L.a.e.e: boolean b(c.L.a.g)>;<android.database.Cursor: long getLong(int)>|<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<c.L.a.v: void run()>;<android.database.Cursor: long getLong(int)>
<c.L.a.v: void run()>;<android.database.Cursor: long getLong(int)>|<android.database.Cursor: int getInt(int)>
<c.L.a.v: void run()>;<android.database.Cursor: long getLong(int)>|<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<c.a.a.a.a.g.m: org.json.JSONObject a(c.a.a.a.a.e.f)>;<java.net.HttpURLConnection: int getResponseCode()>
<c.b.a.F: android.location.Location na(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<c.b.c.c: void j()>;<android.os.UserManager: boolean isUserUnlocked()>
<c.d.c.c: void j()>;<android.os.UserManager: boolean isUserUnlocked()>
<c.i.m.f0: void f(android.view.View,int)>;<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<c.j: long a(c.c,long)>;<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<cn.com.chinatelecom.account.api.b.d: cn.com.chinatelecom.account.api.b.f a(android.content.Context,java.lang.String,android.net.Network,java.lang.String)>;<java.net.HttpURLConnection: int getResponseCode()>
<cn.com.chinatelecom.account.api.b.d: cn.com.chinatelecom.account.api.b.f b(android.content.Context,java.lang.String,java.lang.String,cn.com.chinatelecom.account.api.CtSetting,android.net.Network,boolean,int,java.lang.String,java.lang.String,int,boolean,boolean)>;<javax.net.ssl.HttpsURLConnection: int getResponseCode()>
<co.ronash.pushe.c.a.g: co.ronash.pushe.k.l a()>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<co.ronash.pushe.c.a.h: co.ronash.pushe.k.j a()>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<co.ronash.pushe.c.a.l$a: void onPrepared(android.media.MediaPlayer)>;<android.media.AudioManager: int getRingerMode()>
<co.ronash.pushe.c.a.l: void onPrepared(android.media.MediaPlayer)>;<android.media.AudioManager: int getRingerMode()>
<co.ronash.pushe.k.f: java.lang.String d(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<com.a.a.a: boolean a(android.content.Context,java.lang.String,java.lang.String)>;<BuildClass: java.lang.String getCPU_ABI()>
<com.a.a.b: boolean install(android.content.Context,java.lang.String,java.lang.String)>;<BuildClass: java.lang.String getCPU_ABI()>
<com.a.a.c.a.a.e: java.io.InputStream b(android.net.Uri)>;<android.database.Cursor: java.lang.String getString(int)>
<com.a.a.c.a.h: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.a.a.c.a.j: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.a.a.c.b.a.j: void c(int)>;<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<com.acos.push.KeepAlive: void initSyncAccount(android.content.Context)>;<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<com.alibaba.alibclinkpartner.d.a.j: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.alibclinkpartner.smartlink.b: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.alibclinkpartner.smartlink.config.ALSLConfigration: void getMatrixAppDetailData(com.alibaba.alibclinkpartner.smartlink.callback.MatrixDataGetCallback)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.alibclinkpartner.smartlink.config.ALSLConfigration: void requestSmartLinkData(java.lang.String,com.alibaba.alibclinkpartner.smartlink.callback.SmartLinkDataGetCallback)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.baichuan.trade.biz.core.config.AlibcConfigBusiness$1: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.baichuan.trade.biz.core.config.a: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.alibaba.mtl.log.c.b: java.util.ArrayList a(java.lang.String,int)>;<android.database.Cursor: java.lang.String getString(int)>
<com.alibaba.mtl.log.c.b: java.util.ArrayList b(java.lang.String,int)>;<android.database.Cursor: java.lang.String getString(int)>
<com.alibaba.mtl.log.c.c$a: void run()>;<android.database.Cursor: int getInt(int)>
<com.alibaba.wireless.security.framework.d: java.lang.ClassLoader b(java.lang.String,java.lang.String,boolean)>;<BuildClass: java.lang.String getRELEASE()>
<com.alipay.b.a.a.b.b: java.lang.String q(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.alipay.b.a.a.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getFINGERPRINT()>
<com.alipay.b.a.a.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getHARDWARE()>
<com.alipay.b.a.a.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getPRODUCT()>
<com.alipay.sdk.tid.a: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.alipay.sdk.tid.b: void a(java.lang.String,java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<com.alipay.sdk.tid.b: void a(java.lang.String,java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<com.alipay.sdk.tid.b: void a(java.lang.String,java.lang.String)>;<android.telephony.TelephonyManager: java.lang.String getDeviceId()>|<android.database.Cursor: java.lang.String getString(int)>
<com.alipay.security.mobile.module.b.b: java.lang.String p(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.alipay.security.mobile.module.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getFINGERPRINT()>
<com.alipay.security.mobile.module.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getHARDWARE()>
<com.alipay.security.mobile.module.b.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getPRODUCT()>
<com.alipay.security.mobile.module.deviceinfo.b: java.lang.String u(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.alipay.security.mobile.module.deviceinfo.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getFINGERPRINT()>
<com.alipay.security.mobile.module.deviceinfo.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getHARDWARE()>
<com.alipay.security.mobile.module.deviceinfo.d: boolean a(android.content.Context)>;<BuildClass: java.lang.String getPRODUCT()>
<com.alphab.i.a: void a(com.alphab.i.a,java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<com.anzhi.sdk.middle.net.Connectivity: boolean isWifiConnected()>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.app.pokktsdk.PlayVideoCampaignActivity$7: void onClick(android.view.View)>;<android.media.AudioManager: int getStreamVolume(int)>
<com.app.pokktsdk.notification.NotificationService: void showNotification(java.lang.String)>;<android.database.Cursor: int getCount()>
<com.app.pokktsdk.tasks.DownloadTask: com.app.pokktsdk.model.TaskResult doInBackground(com.app.pokktsdk.model.DownloaderInfo[])>;<java.net.HttpURLConnection: int getResponseCode()>
<com.app.pokktsdk.util.AndroidDeviceInfo: boolean isNetworkAvailable(android.content.Context)>;<android.telephony.TelephonyManager: int getDataState()>
<com.appnext.base.operations.imp.wfcn: java.util.List getData()>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.appnext.base.operations.imp.wfpx$1: void run()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.appnext.base.operations.imp.wpul: void bx()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.appnext.base.operations.imp.wpul: void d(com.appnext.base.operations.imp.wpul)>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<com.appnext.base.operations.imp.wpul: void d(com.appnext.base.operations.imp.wpul)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<com.arcsoft.hpay100.utils.HPaySMSUtils: int a(android.content.Context)>;<android.telephony.TelephonyManager: int getSimState()>
<com.boosterclean.android.battery.data.NotificationManager: void a()>;<android.os.PowerManager: boolean isScreenOn()>
<com.c.a.c.b: com.c.a.c.d a(org.apache.http.HttpResponse)>;<org.apache.http.client.methods.HttpRequestBase: java.lang.String getMethod()>
<com.c.a.c.b: com.c.a.c.d a(org.apache.http.client.methods.HttpRequestBase)>;<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
<com.c.a.d: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.c.a.e: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.c.a.f: void c()>;<android.database.Cursor: int getCount()>
<com.c.a.g: com.c.a.d.c a(android.database.Cursor,boolean)>;<android.database.Cursor: int getCount()>
<com.calendar.Control.CityLocationManager: void a(java.lang.String,com.calendar.Module.gps.LocManager$Result,double,double,com.calendar.Control.CityLocationManager$CityLocationListener)>;<android.location.Location: double getLatitude()>|<android.location.Location: double getLongitude()>
<com.calendar.Module.LoginSdk$4: void run()>;<android.database.Cursor: java.lang.String getString(int)>
<com.calendar.Module.LoginSdk$6: void run()>;<android.database.Cursor: java.lang.String getString(int)>
<com.calendar.Module.gps.MyLocation$GetLastLocation: void run()>;<android.location.Location: long getTime()>
<com.calendar.Module.gps.MyLocation$GetLastLocation: void run()>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<com.calendar.Module.gps.MyLocation: void b(android.content.Context,com.calendar.Module.gps.MyLocation$LocationResult)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<com.calendar.UI.setting.UIWidgetSkinIntroAty$SkinDownloadThread: void run()>;<android.database.Cursor: java.lang.String getString(int)>
<com.calendar.UI.setting.UIWidgetSkinIntroAty: void onClick(android.view.View)>;<android.location.Location: float getSpeed()>
<com.calendar.UI.weather.Task_210: void a()>;<android.database.Cursor: java.lang.String getString(int)>
<com.calendar.UI.weather.thread_task_queue_helper.ThreadTaskQueue: void run()>;<android.location.Location: float getSpeed()>
<com.calendar.analytics.Reporter: void reportAction(java.lang.String,boolean)>;<android.database.Cursor: java.lang.String getString(int)>
<com.calendar.scenelib.activity.ScenePostActivity$7: void a(com.calendar.Module.gps.LocManager$Result)>;<android.location.Location: double getLatitude()>
<com.calendar.scenelib.business.ScenePro: int a(android.content.Context,java.util.ArrayList)>;<android.database.Cursor: int getCount()>
<com.calendar.scenelib.business.ScenePro: int a(android.content.Context,java.util.ArrayList)>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>|<android.database.Cursor: long getLong(int)>
<com.calendar.scenelib.business.ScenePro: int a(android.content.Context,java.util.ArrayList)>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: long getLong(int)>|<android.database.Cursor: int getInt(int)>
<com.calendar.scenelib.business.ScenePro: int a(android.content.Context,long,com.calendar.scenelib.model.Uploading,java.lang.StringBuilder)>;<java.net.HttpURLConnection: int getResponseCode()>|<javax.net.ssl.HttpsURLConnection: int getResponseCode()>
<com.calendar.scenelib.business.ScenePro: int a(android.content.Context,long,java.util.ArrayList)>;<android.database.Cursor: int getCount()>
<com.changdu.b.i: void k()>;<android.database.Cursor: java.lang.String getString(int)>
<com.changdu.bookplayer.RealVoiceBookPlayer: void k()>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<com.changdu.bookread.epub.EpubInfoActivity$1: void handleMessage(android.os.Message)>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.epub.e: void handleMessage(android.os.Message)>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.text.TextViewerActivity$80: void run()>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.text.TextViewerActivity$85: void run()>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.text.TextViewerActivity$85: void run()>;<android.database.Cursor: java.lang.String getString(int)>
<com.changdu.bookread.text.TextViewerActivity: void k(int)>;<android.database.Cursor: java.lang.String getString(int)>
<com.changdu.bookread.text.TextViewerActivity: void m(int)>;<android.database.Cursor: java.lang.String getString(int)>
<com.changdu.bookread.text.TextViewerActivity: void onCreate(android.os.Bundle)>;<android.database.Cursor: int getInt(int)>|<android.database.Cursor: java.lang.String getString(int)>
<com.changdu.bookread.text.TextViewerActivity: void onCreate(android.os.Bundle)>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<com.changdu.bookread.text.ix: void run()>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.text.jl: void run()>;<android.database.Cursor: int getCount()>
<com.changdu.bookread.text.jl: void run()>;<android.database.Cursor: java.lang.String getString(int)>
<com.cmcm.a.a.d.j: void a(boolean)>;<android.database.Cursor: int getCount()>
<com.cmcm.a.a.d.j: void h()>;<android.database.Cursor: int getCount()>
<com.cmcm.cmgame.e.e: void b()>;<android.database.Cursor: java.lang.String getString(int)>
<com.cmcm.newssdk.logic.a: com.cmcm.newssdk.entity.ArticleResponseData a(int,int,int,java.lang.String,int,java.lang.String)>;<android.database.Cursor: int getCount()>
<com.cmcm.newssdk.logic.a: void a(int,int,int,java.lang.String)>;<android.database.Cursor: int getCount()>
<com.cmcm.newssdk.logic.a: void a(int,int,int,java.lang.String,com.cmcm.newssdk.logic.listener.KLoadListener,int,java.lang.String)>;<android.database.Cursor: int getCount()>
<com.cmic.sso.sdk.a.b: void b(android.content.Context)>;<android.database.Cursor: int getInt(int)>
<com.cmic.sso.sdk.a.b: void b(android.content.Context)>;<android.database.Cursor: java.lang.String getString(int)>
<com.cmic.sso.sdk.a.b: void d(android.content.Context)>;<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.cmic.sso.sdk.a.b: void g(android.content.Context)>;<android.telephony.TelephonyManager: java.lang.String getSimOperator()>|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>|<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.cmic.sso.sdk.a.b: void g(android.content.Context)>;<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>|<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<com.cmic.sso.sdk.auth.AuthnHelper: boolean commonInit(android.os.Bundle,java.lang.String,java.lang.String,java.lang.String,int,com.cmic.sso.sdk.auth.TokenListener)>;<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.cmic.sso.sdk.d.e: byte[] b(android.content.Context)>;<android.database.Cursor: java.lang.String getString(int)>
<com.cmic.sso.sdk.d.m: java.lang.String c(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.cmic.sso.sdk.utils.s: java.lang.String a(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.common.ControlCenterEdge: void onClick(android.view.View)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.common.a0.e$a: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.common.tool.c$1: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.common.tool.e$1: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.common.tool.music.activity.PlaylistActivity: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: int getCount()>
<com.common.tool.music.activity.PlaylistActivity: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: java.lang.String getString(int)>
<com.common.tool.music.activity.SearchMusicActivity: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: int getCount()>
<com.common.tool.music.activity.SearchMusicActivity: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: java.lang.String getString(int)>
<com.common.tool.music.e.c: void a(com.common.tool.music.model.Music)>;<android.database.Cursor: int getCount()>
<com.common.tool.wallpaper.NavigationDrawerMain: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: int getCount()>
<com.common.tool.wallpaper.NavigationDrawerMain: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: java.lang.String getString(int)>
<com.common.y: boolean a(android.content.Context)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<com.criware.filesystem.CriFsWebInstaller$WebInstallerTask: java.lang.Boolean doInBackground(com.criware.filesystem.CriFsWebInstaller$AsyncTaskParam[])>;<java.net.HttpURLConnection: int getResponseCode()>
<com.e.a.b: void a(com.e.a.c,java.lang.String)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.e.a.c.d: java.lang.String b()>;<android.database.Cursor: java.lang.String getString(int)>
<com.face.beauty.photopicker.PhotoPickerActivity$5: void vmfd(androidx.loader.content.Loader,android.database.Cursor)>;<android.database.Cursor: int getCount()>
<com.fallguysultimateknockout.mage.utilities.Tools$1: void onReceive(android.content.Context,android.content.Intent)>;<android.database.Cursor: int getInt(int)>
<com.freephone.Au35: void y9Twa(int)>;<android.database.Cursor: int getCount()>
<com.freephone.TiKw: void y9Twa(int)>;<android.database.Cursor: int getCount()>
<com.freephone.TiKw: void y9Twa(int)>;<android.database.Cursor: java.lang.String getString(int)>
<com.freephone.aQeK: void Bnd(boolean,com.freephone.NSB)>;<android.database.Cursor: int getCount()>
<com.freephone.aQeK: void Bnd(boolean,com.freephone.NSB)>;<android.database.Cursor: java.lang.String getString(int)>
<com.freephone.bj8: java.io.InputStream Bnd(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.grand.thyche.JB6: com.grand.thyche.d4ho JACPu()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.grand.thyche.QiE: boolean K(java.lang.String,java.security.cert.X509Certificate)>;<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>
<com.grand.thyche.X7: java.io.InputStream Ib(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.grand.thyche.YZQe: void JACPu()>;<android.app.KeyguardManager: boolean isKeyguardLocked()>
<com.grand.thyche.y1z: long open(com.grand.thyche.u62iK)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.griyu.games.rom.MainActivity: void onCreate(android.os.Bundle)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.griyu.games.rom.MainActivity: void onCreate(android.os.Bundle)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getPRODUCT()>
<com.hatsune.eagleee.EagleApplication: void onActivityCreated(android.app.Activity,android.os.Bundle)>;<BuildClass: java.lang.String getHARDWARE()>|<BuildClass: java.lang.String getPRODUCT()>
<com.hatsune.eagleee.EagleApplication: void onActivityCreated(android.app.Activity,android.os.Bundle)>;<BuildClass: java.lang.String getMANUFACTURER()>|<BuildClass: java.lang.String getPRODUCT()>
<com.hatsune.eagleee.EagleApplication: void onActivityCreated(android.app.Activity,android.os.Bundle)>;<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getPRODUCT()>
<com.hatsune.eagleee.EagleApplication: void onActivityCreated(android.app.Activity,android.os.Bundle)>;<BuildClass: java.lang.String getPRODUCT()>
<com.hatsune.eagleee.EagleApplication: void onActivityCreated(android.app.Activity,android.os.Bundle)>;<BuildClass: java.lang.String getPRODUCT()>|<BuildClass: java.lang.String getFINGERPRINT()>
<com.igexin.push.b.a: void b_()>;<android.database.Cursor: int getCount()>
<com.igexin.push.config.a: void b(android.database.sqlite.SQLiteDatabase)>;<android.database.Cursor: int getInt(int)>
<com.igexin.push.config.a: void b(android.database.sqlite.SQLiteDatabase)>;<android.database.Cursor: java.lang.String getString(int)>
<com.igexin.push.core.a.f: boolean a(org.json.JSONObject,byte[],boolean)>;<android.database.Cursor: int getCount()>
<com.igexin.push.core.a.f: boolean b(java.lang.String,java.lang.String,java.lang.String)>;<android.database.Cursor: int getCount()>
<com.igexin.push.core.a.f: void g(android.content.Intent)>;<android.database.Cursor: int getCount()>
<com.igexin.push.core.a.f: void r()>;<android.database.Cursor: long getLong(int)>
<com.igexin.push.core.a.m: void b()>;<android.database.Cursor: java.lang.String getString(int)>
<com.igexin.push.core.b.af: java.util.ArrayList a(java.lang.String)>;<android.database.Cursor: int getCount()>
<com.igexin.push.core.b.g: void b(android.database.sqlite.SQLiteDatabase)>;<android.database.Cursor: int getInt(int)>
<com.igexin.push.core.b.g: void b(android.database.sqlite.SQLiteDatabase)>;<android.database.Cursor: java.lang.String getString(int)>
<com.imod.MobileInfo: java.lang.String getNetWorkConnetedType()>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.jaredrummler.materialspinner.MaterialSpinner: void setSelectedIndex(int)>;<android.database.Cursor: int getCount()>
<com.jb.zcamera.community.activity.ShareMultiMediaActivity$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>;<android.database.Cursor: long getLong(int)>
<com.jb.zcamera.vip.VipMainActivity: void b(int)>;<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<com.kg.v1.notification.f: void b(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<com.kg.v1.notification.f: void b(android.content.Context)>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.lockscreenos13.phonex.b.a.ad: void c()>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<com.lockscreenos13.phonex.b.a.ao: void a(com.lockscreenos13.phonex.model.PassCode)>;<android.database.Cursor: java.lang.String getString(int)>
<com.lockscreenos13.phonex.b.b.a: void c()>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>
<com.lockscreenos13.phonex.b.c.al: void a(com.lockscreenos13.phonex.model.PassCode)>;<android.database.Cursor: java.lang.String getString(int)>
<com.lockscreenos13.phonex.b.c: void l()>;<android.database.Cursor: int getInt(int)>
<com.lockscreenos13.phonex.b.d.al: void a(com.lockscreenos13.phonex.model.PassCode)>;<android.database.Cursor: java.lang.String getString(int)>
<com.lowagie.text.Paragraph: boolean add(java.lang.Object)>;<android.database.Cursor: byte[] getBlob(int)>|<android.database.Cursor: java.lang.String getString(int)>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.AppUtilsKt: boolean l(android.content.Context)>;<android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.AppUtilsKt: java.util.ArrayList k(android.content.Context)>;<android.database.Cursor: java.lang.String getString(int)>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void a(com.skyunion.android.base.utils.model.StorageSize,java.lang.Integer)>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void a(java.lang.Integer,java.lang.Integer)>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void b(int)>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void g()>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void k(java.lang.Integer)>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.RemoteViewManager: void n()>;<android.os.PowerManager: boolean isScreenOn()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.SecurityScanUtil: int a(android.content.Context,java.lang.Boolean)>;<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<com.master.phone.cleaner.cleanapp.speed.booster.cooler.util.WifiAdmin: void c()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.mintegral.msdk.base.controller.b$4: void run()>;<android.database.Cursor: int getInt(int)>
<com.mintegral.msdk.base.entity.CampaignEx: com.mintegral.msdk.base.entity.k TrackingStr2Object(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<com.mintegral.msdk.click.g$a: void a()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.mintegral.msdk.mtgnative.c.d: void a(android.content.Context,java.lang.String)>;<android.database.Cursor: int getInt(int)>
<com.mintegral.msdk.reward.c.a: void a(android.content.Context,java.lang.String)>;<android.database.Cursor: int getInt(int)>
<com.mintegral.msdk.video.bt.a.c: void L(java.lang.Object,org.json.JSONObject)>;<android.database.Cursor: java.lang.String getString(int)>
<com.mintegral.msdk.videocommon.download.NetStateOnReceive: void onReceive(android.content.Context,android.content.Intent)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.mintegral.msdk.videocommon.download.a$3: void run()>;<android.database.Cursor: int getInt(int)>
<com.mintegral.msdk.videocommon.download.a$3: void run()>;<java.net.HttpURLConnection: int getResponseCode()>
<com.mintegral.msdk.videocommon.download.k: void a()>;<android.database.Cursor: long getLong(int)>|<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: int getInt(int)>|<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<com.mintegral.msdk.videocommon.download.k: void a()>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<com.mobvista.cloud.b.a.a: void e()>;<android.database.Cursor: int getInt(int)>
<com.mobvista.cloud.b.a.a: void f()>;<android.database.Cursor: int getInt(int)>
<com.moxiu.launcher.LauncherModel: void onReceive(android.content.Context,android.content.Intent)>;<android.database.Cursor: java.lang.String getColumnName(int)>|<android.database.Cursor: java.lang.String getString(int)>
<com.moxiu.launcher.LauncherModel: void onReceive(android.content.Context,android.content.Intent)>;<android.database.Cursor: java.lang.String getString(int)>|<android.database.Cursor: java.lang.String getColumnName(int)>
<com.moxiu.launcher.resolver.ResolverUtil: java.lang.String getSpecificMobileRomInfo()>;<BuildClass: java.lang.String getMANUFACTURER()>
<com.netease.npsdk.http.HttpContentFileHandler: void handleContent(java.net.HttpURLConnection)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.netease.npsdk.pay.channel.webpay.PayParameters: java.lang.String generate(android.content.Context,int,long,java.util.Random,int,java.lang.String)>;<android.telephony.TelephonyManager: int getSimState()>
<com.netease.npsdk.protocol.DeviceInfoChunkBuilder: void endAddProperty()>;<android.telephony.TelephonyManager: int getSimState()>
<com.netease.npsdk.statistics.DataAcquisitionUtils: java.lang.String createNewSession(long)>;<android.database.Cursor: java.lang.String getString(int)>
<com.netease.npsdk.statistics.chunk.AppInfoChunkBuilder: void endAddProperty(int)>;<android.telephony.TelephonyManager: int getSimState()>
<com.netease.npsdk.utils.AndroidUtils: com.netease.npsdk.utils.AndroidUtils$WIFIInfo getWIFIInfo()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.netease.nusdk.b.g: void a(java.net.HttpURLConnection)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.newalertapps.camera.translator.controller.cameragoogle.CameraView: void start()>;<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>|<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>
<com.phone.cleaner.speedbooster.magic.cleanapp.ui.security.SecurityScanView$scanAdb$1: void run()>;<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>|<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.pics.magic.Activity.photopicker.PhotoPickerActivity$5: void LUZ(androidx.loader.content.Loader,android.database.Cursor)>;<android.database.Cursor: int getCount()>
<com.qq.e.comm.managers.status.DeviceStatus: java.util.Map getLacAndCeilId()>;<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<com.qq.e.comm.managers.status.DeviceStatus: java.util.Map getLacAndCeilId()>;<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<com.qqgame.mic.hlddzDownloader: void updateProgress()>;<android.database.Cursor: int getInt(int)>
<com.rba.anime.utilities.Tools$1: void onReceive(android.content.Context,android.content.Intent)>;<android.database.Cursor: int getInt(int)>
<com.scanner.qrcode.barcode.DecoderActivity: void onActivityResult(int,int,android.content.Intent)>;<android.database.Cursor: java.lang.String getString(int)>
<com.topmobileringtones.beautifulwallpapershdfree.g: void onReceive(android.content.Context,android.content.Intent)>;<android.database.Cursor: int getInt(int)>
<com.volley.toolbox.HurlStack: org.apache.http.HttpResponse performRequest(com.volley.Request,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.yandex.metrica.impl.ob.cc: void a(com.yandex.metrica.impl.ob.ca)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.yandex.metrica.impl.ob.lx: void c()>;<android.database.Cursor: java.lang.String getString(int)>
<com.yandex.metrica.impl.ob.qs: void a(android.location.Location)>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<com.yandex.metrica.impl.ob.we$a: boolean a(android.location.Location,android.location.Location)>;<android.location.Location: long getTime()>
<com.yandex.metrica.impl.ob.wp: com.yandex.metrica.impl.ob.wr a(java.net.HttpURLConnection,com.yandex.metrica.impl.ob.wr)>;<java.net.HttpURLConnection: int getResponseCode()>
<com.yanzhenjie.permission.a.m: boolean a()>;<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<com.yanzhenjie.permission.a.p: boolean a()>;<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>
<cr.b: java.lang.String b(android.content.Context)>;<BuildClass: java.lang.String getMANUFACTURER()>
<d.a.a.a: boolean a(android.content.Context,java.lang.String,java.lang.String)>;<BuildClass: java.lang.String getCPU_ABI()>
<d.a.b.a.f.h.i1: java.util.List a(java.util.List)>;<java.net.HttpURLConnection: int getResponseCode()>
<d.a.b.a.f.h.w: void a(d.a.b.a.f.h.b1)>;<android.database.Cursor: long getLong(int)>
<d.a.b.a.f.h.z: void H()>;<android.database.Cursor: long getLong(int)>
<d.a.bc$a: int compare(java.lang.Object,java.lang.Object)>;<BuildClass: java.lang.String getMODEL()>|<android.media.AudioManager: boolean isMusicActive()>
<d.a.cq: d.a.ar a(int[])>;<BuildClass: java.lang.String getBOARD()>|<BuildClass: java.lang.String getRELEASE()>|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>|<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getSERIAL()>|<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>|<BuildClass: java.lang.String getID()>|<BuildClass: java.lang.String getMANUFACTURER()>
<d.a.cq: void e()>;<BuildClass: java.lang.String getRELEASE()>|<BuildClass: java.lang.String getBOARD()>|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>|<BuildClass: java.lang.String getDEVICE()>|<BuildClass: java.lang.String getMODEL()>|<BuildClass: java.lang.String getBRAND()>|<BuildClass: java.lang.String getSERIAL()>|<BuildClass: java.lang.String getID()>|<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>|<BuildClass: java.lang.String getMANUFACTURER()>
<d.ff.d.j.a.i.c: void a(android.content.Context,int,java.lang.Object)>;<java.net.HttpURLConnection: int getResponseCode()>
<d.q.d.j.a.i.download: void a(android.content.Context,java.lang.String)>;<java.net.HttpURLConnection: int getResponseCode()>
<e.b.k.x: android.location.Location a(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<e.e.a.d.a.a.d: java.io.InputStream l(android.net.Uri)>;<android.database.Cursor: java.lang.String getString(int)>
<e.e.a.d.a.k: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<e.j.b.b.b.b.a.i: void run()>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<e.j.b.c.i.k$b: void handleMessage(android.os.Message)>;<android.database.Cursor: int getInt(int)>
<e.j.b.c.j.c: int La(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>|<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<f.a.a.a.n.g.l: org.json.JSONObject a(f.a.a.a.n.e.d)>;<java.net.HttpURLConnection: int getResponseCode()>
<f: android.location.Location a(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<g.b.a.e.a0.a: void d(g.b.a.e.a0.b,g.b.a.e.a0.a$a,g.b.a.e.a0.a$c)>;<java.net.HttpURLConnection: int getResponseCode()>
<g.b.a.e.v: g.b.a.e.v$e e()>;<BuildClass: java.lang.String getTAGS()>
<g.c.b.p1: void b()>;<java.net.HttpURLConnection: int getResponseCode()>
<g.c.b.p1: void d()>;<java.net.HttpURLConnection: int getResponseCode()>
<g.c.b.z4: void c(java.lang.Runnable)>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<gj: android.location.Location a(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<hi: boolean a(android.view.MenuItem,hp,int)>;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<hw: boolean Nv(fk)>;<java.net.HttpURLConnection: int getResponseCode()>
<iisr: void tvmv()>;<java.net.HttpURLConnection: int getResponseCode()>
<jx: android.graphics.drawable.Drawable a(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<lF: android.graphics.drawable.Drawable Y8(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<o8: boolean h()>;<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>|<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>
<of: java.io.InputStream a(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<oicq.wlogin_sdk.request.j: int c(int)>;<java.net.HttpURLConnection: int getResponseCode()>
<org.code00.screenshare.fnscreen: void a()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<org.code00.screenshare2.fnscreen: void a()>;<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<respect.jardea.v7.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)>;<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<respect.jardea.v7.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)>;<android.database.Cursor: java.lang.String getString(int)>
<uydm: java.io.InputStream wgdt(android.net.Uri)>;<android.database.Cursor: java.lang.String getString(int)>
<vsfm: java.io.InputStream vmfd(java.net.URL,int,java.net.URL,java.util.Map)>;<java.net.HttpURLConnection: int getResponseCode()>
<vvtl: void vmfd(java.lang.Runnable)>;<java.net.HttpURLConnection: int getResponseCode()>|<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<wg: vy$d c(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<ydef: igby$tvmv znjk(android.content.Context)>;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<yu: boolean c()>;<BuildClass: java.lang.String getFINGERPRINT()>
<yu: boolean c()>;<BuildClass: java.lang.String getMANUFACTURER()>
<yu: boolean c()>;<BuildClass: java.lang.String getMODEL()>
